/// <reference types="node" />
import { NetworkTableType } from "./network-table-instance";
export declare class ClassCastError extends Error {
}
export default class NetworkTableValue {
    static makeBoolean(val: boolean, time?: number): NetworkTableValue;
    static makeDouble(val: number, time?: number): NetworkTableValue;
    static makeString(val: string, time?: number): NetworkTableValue;
    static makeRaw(val: Buffer, time?: number): NetworkTableValue;
    static makeBooleanArray(val: boolean[], time?: number): NetworkTableValue;
    static makeDoubleArray(val: number[], time?: number): NetworkTableValue;
    static makeStringArray(val: string[], time?: number): NetworkTableValue;
    static makeUnassigned(time?: number): NetworkTableValue;
    private _type;
    private _value;
    private _time;
    private constructor();
    getType(): NetworkTableType;
    getTime(): number;
    isValid(): boolean;
    isBoolean(): boolean;
    isBooleanArray(): boolean;
    isDouble(): boolean;
    isDoubleArray(): boolean;
    isString(): boolean;
    isStringArray(): boolean;
    isRaw(): boolean;
    isRPC(): boolean;
    getBoolean(): boolean;
    getBooleanArray(): boolean[];
    getDouble(): number;
    getDoubleArray(): number[];
    getString(): string;
    getStringArray(): string[];
    getRaw(): Buffer;
}
