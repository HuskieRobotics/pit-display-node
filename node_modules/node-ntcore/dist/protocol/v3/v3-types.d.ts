import { NTEntryFlags, NTEntryType, NTEntryValue } from "../nt-entry";
export declare enum V3EntryType {
    BOOLEAN = 0,
    DOUBLE = 1,
    STRING = 2,
    RAW = 3,
    BOOLEAN_ARRAY = 16,
    DOUBLE_ARRAY = 17,
    STRING_ARRAY = 18,
    RPC = 32
}
export declare const ByteToV3EntryType: {
    0: V3EntryType;
    1: V3EntryType;
    2: V3EntryType;
    3: V3EntryType;
    16: V3EntryType;
    17: V3EntryType;
    18: V3EntryType;
    32: V3EntryType;
};
export declare const V3toNTEntryType: Map<V3EntryType, NTEntryType>;
export declare const NTtoV3EntryType: Map<NTEntryType, V3EntryType>;
export declare enum V3MessageType {
    KEEP_ALIVE = 0,
    CLIENT_HELLO = 1,
    PROTO_VERSION_UNSUPPORTED = 2,
    SERVER_HELLO_COMPLETE = 3,
    SERVER_HELLO = 4,
    CLIENT_HELLO_COMPLETE = 5,
    ENTRY_ASSIGNMENT = 16,
    ENTRY_UPDATE = 17,
    ENTRY_FLAGS_UPDATE = 18,
    ENTRY_DELETE = 19,
    CLEAR_ALL_ENTRIES = 20,
    RPC_EXECUTE = 32,
    RPC_RESPONSE = 33
}
export declare const CLEAR_ALL_ENTRIES_MAGIC_VALUE = 3496784506;
export declare const ByteToV3MessageType: {
    0: V3MessageType;
    1: V3MessageType;
    2: V3MessageType;
    3: V3MessageType;
    4: V3MessageType;
    5: V3MessageType;
    16: V3MessageType;
    17: V3MessageType;
    18: V3MessageType;
    19: V3MessageType;
    20: V3MessageType;
    32: V3MessageType;
    33: V3MessageType;
};
export declare const V3MessageTypeToString: Map<V3MessageType, string>;
export declare enum V3ClientHandshakeState {
    V3HS_NOT_CONNECTED = 0,
    V3HS_AWAIT_SERVER_HELLO = 1,
    V3HS_AWAIT_SERVER_ENTRIES = 2,
    V3HS_COMPLETE = 3
}
export declare enum V3ServerHandshakeState {
    AWAIT_CLIENT_HELLO = 0,
    AWAIT_CLIENT_HELLO_COMPLETE = 1,
    COMPLETE = 2
}
export interface V3EntryFlags extends NTEntryFlags {
}
export declare const V3_DEFAULT_FLAGS: V3EntryFlags;
export interface V3RPCDefinition {
    name: string;
    parameters: V3RPCParameter[];
    results: V3RPCResult[];
}
export interface V3RPCParameter {
    type: V3EntryType;
    name: string;
    value: NTEntryValue;
}
export interface V3RPCResult {
    type: V3EntryType;
    name: string;
    value: NTEntryValue;
}
