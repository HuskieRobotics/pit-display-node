/// <reference types="node" />
import { NetworkEndpointInfo } from "../transport/transport-types";
import { NTEntryValue } from "./nt-entry";
export declare function parseNetworkEndpointInfo(address: string, port: number): NetworkEndpointInfo;
export declare function toUnsignedLEB128(num: number): Buffer;
export interface LEB128Result {
    value: number;
    offset: number;
}
export declare function fromUnsignedLEB128(buf: Buffer, offset: number): LEB128Result;
export declare class BufferLengthError extends Error {
}
export declare class InvalidMessageTypeError extends Error {
}
export declare class InvalidEntryValueError extends Error {
}
export declare class InvalidEntryTypeError extends Error {
}
export declare function checkBufferLength(buf: Buffer, offset: number, bytesToRead?: number): void;
export declare function encodeLEB128String(msg: string): Buffer;
export interface LEB128StringResult {
    value: string;
    offset: number;
}
export declare function decodeLEB128String(buf: Buffer, offset?: number): LEB128StringResult;
export declare function ntValueIsEqual(a: NTEntryValue, b: NTEntryValue): boolean;
