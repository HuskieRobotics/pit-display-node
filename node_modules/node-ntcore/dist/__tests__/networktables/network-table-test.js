"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const network_table_1 = __importDefault(require("../../networktables/network-table"));
describe("Network Tables", () => {
    describe("Static Methods", () => {
        it("basenameKey test", () => {
            expect(network_table_1.default.basenameKey("/foo/bar/baz")).toEqual("baz");
            expect(network_table_1.default.basenameKey("/foo/bar/baz/")).toEqual("");
        });
        it("normalizeKey test", () => {
            expect(network_table_1.default.normalizeKey("/foo/bar", true)).toEqual("/foo/bar");
            expect(network_table_1.default.normalizeKey("foo/bar", true)).toEqual("/foo/bar");
            expect(network_table_1.default.normalizeKey("/foo/bar", false)).toEqual("foo/bar");
            expect(network_table_1.default.normalizeKey("/foo///bar", false)).toEqual("foo/bar");
            expect(network_table_1.default.normalizeKey("foo/bar")).toEqual("/foo/bar");
        });
        it("getHierarchy test", () => {
            expect(network_table_1.default.getHierarchy("foo/bar/baz")).toEqual(["/", "/foo", "/foo/bar", "/foo/bar/baz"]);
        });
    });
    describe("Construction", () => {
        it("should normalize the key upon construction", () => {
            const table1 = new network_table_1.default(undefined, "foo/bar");
            expect(table1.getPath()).toEqual("/foo/bar");
            const table2 = table1.getSubTable("/baz");
            expect(table2.getPath()).toEqual("/foo/bar/baz");
        });
    });
});
//# sourceMappingURL=network-table-test.js.map